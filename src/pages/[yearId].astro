---
import BookDetails from "../components/bookDetail.astro"
import Header from "../components/header.astro"
import type { Book } from "../types/Book";
import Year from "../components/year.astro";
import books from "../assets/books.json";

export async function getStaticPaths() {
  return [
    { params: { yearId: "2021" } },
    { params: { yearId: "2022" } },
    { params: { yearId: "2023" } },
    { params: { yearId: "2024" } },
    { params: { yearId: "2025" } },
  ];
}

const { yearId } = Astro.params;

const months: string[] = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];

function getYear(date: string) {
  let dateList = date.split("/");
  return dateList[2];
}

function formatDate(date: string) {
  let dateList = date.split("/");
  let monthNum = parseInt(dateList[0]);
  return months[monthNum - 1] + " " + dateList[2];
}

let filteredYear = books.filter((book)=>{
    if (getYear(book.dateRead)===yearId){
        return book;
    }
});
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="stylesheet" href="/reading-list/global.css" />
    <title>Reading List</title>
  </head>
  <body>
    <Header />
    <main>
      <h2 class="year">{yearId} [{filteredYear.length} books]</h2>
      {filteredYear.map((bookItem) => (
        <BookDetails book={bookItem} />
      ))}
    </main>
  </body>
</html>
